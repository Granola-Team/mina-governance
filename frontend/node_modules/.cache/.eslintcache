[{"/home/ubuntu/onchain-signalling/frontend/src/index.js":"1","/home/ubuntu/onchain-signalling/frontend/src/App.js":"2","/home/ubuntu/onchain-signalling/frontend/src/Datatable/index.js":"3","/home/ubuntu/onchain-signalling/frontend/src/service/api.js":"4"},{"size":244,"mtime":1653902805972,"results":"5","hashOfConfig":"6"},{"size":178,"mtime":1653902805972,"results":"7","hashOfConfig":"6"},{"size":3308,"mtime":1653917425516,"results":"8","hashOfConfig":"6"},{"size":481,"mtime":1654008412241,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fe85a0",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubuntu/onchain-signalling/frontend/src/index.js",[],"/home/ubuntu/onchain-signalling/frontend/src/App.js",[],"/home/ubuntu/onchain-signalling/frontend/src/Datatable/index.js",["19"],"import React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport styled from 'styled-components';\n\nimport api from '../service/api';\n\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ClearButton = styled.button`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  border-color: #2979FF;\n  border: none;\n  background-color: #2979FF;\n  color: #fff;\n  height: 34px;\n  width: 50px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n    <>\n      <TextField id=\"search\" type=\"text\" placeholder=\"Filtrar por nome\" aria-label=\"Search Input\" value={filterText} onChange={onFilter} />\n      <ClearButton type=\"button\" onClick={onClear}>X</ClearButton>\n    </>\n  );\n\nconst columns = [\n  {\n    name: 'ID',\n    selector: 'id',\n    sortable: true,\n  },\n  {\n    name: 'firstname',\n    selector: 'firstname',\n    sortable: true,\n  },\n  {\n    name: 'Details',\n    button: true,\n    cell: () => <button className=\"btn\"><i class=\"fas fa-eye\"></i></button>,\n  }\n];\n\nexport default function Datatable() {\n    const [data, setData] = useState([]);\n    const [filterText, setFilterText] = React.useState('');\n    const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n    const filteredItems = data; //.filter(item => item.name && item.name.toLowerCase().includes(filterText.toLowerCase()));\n    console.log(filteredItems);\n    const subHeaderComponentMemo = React.useMemo(() => {\n        const handleClear = () => {\n          if (filterText) {\n            setResetPaginationToggle(!resetPaginationToggle);\n            setFilterText('');\n          }\n        };\n    \n        return <FilterComponent onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText} />;\n      }, [filterText, resetPaginationToggle]);\n\n    useEffect(() => {\n        api.get('customers')\n            .then((response) => {\n                console.log(response.data); \n                setData(response.data)\n                console.log(response.data)\n            })\n    }, []);\n    \n    return (\n        <>\n        <div className=\"container\">\n            <DataTable \n                title=\"Data-Table React\"\n                columns={columns}\n                data={filteredItems}\n\n                paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1 subHeader\n                subHeaderComponent={subHeaderComponentMemo}\n\n                noDataComponent={<NoData />}\n\n                compact={true}\n                responsive={true}\n                compact={true}\n                pagination={true}\n                striped={true}\n                highlightOnHover={true}\n                direction=\"left\"\n            />\n        </div>\n            \n        </>\n    )\n}\n\nconst NoData = () => {\n  return(\n    <>\n      <p>No Data available</p>\n    </>\n  );  \n}\n","/home/ubuntu/onchain-signalling/frontend/src/service/api.js",[],{"ruleId":"20","severity":1,"message":"21","line":106,"column":17,"nodeType":"22","messageId":"23","endLine":106,"endColumn":31},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps"]