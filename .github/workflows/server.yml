name: server

on:
  push:
    branches: ['main']
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: server

jobs:
  ci:
    runs-on: ubuntu-latest
    # runs-on: ${{ matrix.os }}
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     rust: [stable, beta, nightly]
    #     os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Run clippy
        working-directory: ./server
        run: |
          set -e
          rustup component add clippy-preview
          cargo clippy -- -D warnings -D clippy::pedantic -D clippy::unwrap_used

      - name: Run CI
        working-directory: ./server
        run: |
          set -e
          cargo build
          cargo test
