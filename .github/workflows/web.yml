name: web

on:
  push:
    branches: ['main']
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  SKIP_ENV_VALIDATION: 1

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        name: Clean pnpm
        id: pnpm-clean
        with:
          version: ^8.6.0
          run_install: false

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: ^8.6.0
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        working-directory: ./web
        run: pnpm install

      - name: Run TSC
        working-directory: ./web
        run: pnpm ts-lint

      - name: Run lint
        working-directory: ./web
        run: pnpm lint

      - name: Run tests (Jest)
        working-directory: ./web
        run: pnpm test

      - name: Run build
        working-directory: ./web
        run: pnpm build
