FROM node:16-alpine AS base

### build dependencies
FROM base AS cacher

RUN apk add --no-cache libc6-compat
WORKDIR /app

COPY ./web/package.json ./pnpm-lock.yaml* ./
RUN yarn global add pnpm && pnpm i

### build app
FROM base AS builder
WORKDIR /app

ENV SKIP_ENV_VALIDATION=1
ENV NEXT_ENV_DOCKER=1

COPY ./web .

RUN rm -rf node_modules

COPY --from=cacher /app/node_modules ./node_modules
COPY --from=cacher /app/package.json ./package.json
COPY --from=cacher /app/pnpm-lock.yaml ./pnpm-lock.yaml

RUN yarn global add pnpm && pnpm i

RUN pnpx next build

### production image, copy all files and run next
FROM gcr.io/distroless/nodejs16-debian11 AS runtime
WORKDIR /app

ENV NODE_ENV=production

COPY --from=builder /app/node_modules ./node_modules

COPY --from=builder /app/public ./public

COPY --from=builder /app/env.mjs ./
COPY --from=builder /app/next.config.mjs ./

COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

# start the app
CMD ["server.js"]